{"ast":null,"code":"// 这里面存放的就是 vuex 相关的核心代码\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport user from './modules/user';\nimport setting from './modules/setting';\n\n// 插件安装\nVue.use(Vuex);\n\n// 创建仓库\nconst store = new Vuex.Store({\n  // 严格模式 (有利于初学者，检测不规范的代码 => 上线时需要关闭)\n  strict: true,\n  // 1. 通过 state 可以提供数据 (所有组件共享的数据)\n  state: {\n    title: '仓库大标题',\n    count: 100,\n    list: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  },\n  // 2. 通过 mutations 可以提供修改数据的方法\n  mutations: {\n    // 所有mutation函数，第一个参数，都是 state\n    // 注意点：mutation参数有且只能有一个，如果需要多个参数，包装成一个对象\n    addCount(state, obj) {\n      console.log(obj);\n      // 修改数据\n      state.count += obj.count;\n    },\n    subCount(state, n) {\n      state.count -= n;\n    },\n    changeCount(state, newCount) {\n      state.count = newCount;\n    },\n    changeTitle(state, newTitle) {\n      state.title = newTitle;\n    }\n  },\n  // 3. actions 处理异步\n  // 注意：不能直接操作 state，操作 state，还是需要 commit mutation\n  actions: {\n    // context 上下文 (此处未分模块，可以当成store仓库)\n    // context.commit('mutation名字', 额外参数)\n    changeCountAction(context, num) {\n      // 这里是setTimeout模拟异步，以后大部分场景是发请求\n      setTimeout(() => {\n        context.commit('changeCount', num);\n      }, 1000);\n    }\n  },\n  // 4. getters 类似于计算属性\n  getters: {\n    // 注意点：\n    // 1. 形参第一个参数，就是state\n    // 2. 必须有返回值，返回值就是getters的值\n    filterList(state) {\n      return state.list.filter(item => item > 5);\n    }\n  },\n  // 5. modules 模块\n  modules: {\n    user,\n    setting\n  }\n});\n\n// 导出给main.js使用\nexport default store;","map":{"version":3,"names":["Vue","Vuex","user","setting","use","store","Store","strict","state","title","count","list","mutations","addCount","obj","console","log","subCount","n","changeCount","newCount","changeTitle","newTitle","actions","changeCountAction","context","num","setTimeout","commit","getters","filterList","filter","item","modules"],"sources":["/Users/bufferhh/Desktop/vuex-demo/src/store/index.js"],"sourcesContent":["// 这里面存放的就是 vuex 相关的核心代码\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport user from './modules/user'\nimport setting from './modules/setting'\n\n// 插件安装\nVue.use(Vuex)\n\n// 创建仓库\nconst store = new Vuex.Store({\n  // 严格模式 (有利于初学者，检测不规范的代码 => 上线时需要关闭)\n  strict: true,\n  // 1. 通过 state 可以提供数据 (所有组件共享的数据)\n  state: {\n    title: '仓库大标题',\n    count: 100,\n    list: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  },\n\n  // 2. 通过 mutations 可以提供修改数据的方法\n  mutations: {\n    // 所有mutation函数，第一个参数，都是 state\n    // 注意点：mutation参数有且只能有一个，如果需要多个参数，包装成一个对象\n    addCount (state, obj) {\n      console.log(obj)\n      // 修改数据\n      state.count += obj.count\n    },\n    subCount (state, n) {\n      state.count -= n\n    },\n    changeCount (state, newCount) {\n      state.count = newCount\n    },\n    changeTitle (state, newTitle) {\n      state.title = newTitle\n    }\n  },\n\n  // 3. actions 处理异步\n  // 注意：不能直接操作 state，操作 state，还是需要 commit mutation\n  actions: {\n    // context 上下文 (此处未分模块，可以当成store仓库)\n    // context.commit('mutation名字', 额外参数)\n    changeCountAction (context, num) {\n      // 这里是setTimeout模拟异步，以后大部分场景是发请求\n      setTimeout(() => {\n        context.commit('changeCount', num)\n      }, 1000)\n    }\n  },\n\n  // 4. getters 类似于计算属性\n  getters: {\n    // 注意点：\n    // 1. 形参第一个参数，就是state\n    // 2. 必须有返回值，返回值就是getters的值\n    filterList (state) {\n      return state.list.filter(item => item > 5)\n    }\n  },\n\n  // 5. modules 模块\n  modules: {\n    user,\n    setting\n  }\n})\n\n// 导出给main.js使用\nexport default store\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,OAAO,MAAM,mBAAmB;;AAEvC;AACAH,GAAG,CAACI,GAAG,CAACH,IAAI,CAAC;;AAEb;AACA,MAAMI,KAAK,GAAG,IAAIJ,IAAI,CAACK,KAAK,CAAC;EAC3B;EACAC,MAAM,EAAE,IAAI;EACZ;EACAC,KAAK,EAAE;IACLC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;EACtC,CAAC;EAED;EACAC,SAAS,EAAE;IACT;IACA;IACAC,QAAQA,CAAEL,KAAK,EAAEM,GAAG,EAAE;MACpBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB;MACAN,KAAK,CAACE,KAAK,IAAII,GAAG,CAACJ,KAAK;IAC1B,CAAC;IACDO,QAAQA,CAAET,KAAK,EAAEU,CAAC,EAAE;MAClBV,KAAK,CAACE,KAAK,IAAIQ,CAAC;IAClB,CAAC;IACDC,WAAWA,CAAEX,KAAK,EAAEY,QAAQ,EAAE;MAC5BZ,KAAK,CAACE,KAAK,GAAGU,QAAQ;IACxB,CAAC;IACDC,WAAWA,CAAEb,KAAK,EAAEc,QAAQ,EAAE;MAC5Bd,KAAK,CAACC,KAAK,GAAGa,QAAQ;IACxB;EACF,CAAC;EAED;EACA;EACAC,OAAO,EAAE;IACP;IACA;IACAC,iBAAiBA,CAAEC,OAAO,EAAEC,GAAG,EAAE;MAC/B;MACAC,UAAU,CAAC,MAAM;QACfF,OAAO,CAACG,MAAM,CAAC,aAAa,EAAEF,GAAG,CAAC;MACpC,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED;EACAG,OAAO,EAAE;IACP;IACA;IACA;IACAC,UAAUA,CAAEtB,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACG,IAAI,CAACoB,MAAM,CAACC,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAC5C;EACF,CAAC;EAED;EACAC,OAAO,EAAE;IACP/B,IAAI;IACJC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}